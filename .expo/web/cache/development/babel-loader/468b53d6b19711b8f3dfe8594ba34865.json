{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"label\", \"icon\", \"isPassword\", \"hidePassword\", \"setHidePassword\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport { StatusBar } from 'expo-status-bar';\nimport { Octicons, IonicIcon } from '@expo/vector-icons';\nimport { StyledContainer, InnerContainer, PageLogo, PageTitle, StyledFormArea, LeftIcon, StyledTextInput, StyledInputLabel, StyledButton, ButtonText, Line, Colors, FormLog } from \"../components/styles\";\nimport { Formik } from \"formik\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"../components/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar brand = Colors.brand,\n    darkLight = Colors.darkLight,\n    primary = Colors.primary;\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var login = function login(values) {\n    if (values.user_name == \"\" || values.password == \"\") {\n      Alert.alert(\"All fields must be required!\");\n      return;\n    } else {\n      console.log(values.password);\n      fetch('http://192.168.117.119:3000/api/user/login', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(values)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (data.error) {\n          Alert.alert(data.error);\n          console.log(data.error);\n        } else {\n          return navigation.navigate('Home');\n        }\n      });\n    }\n  };\n\n  return _jsx(StyledContainer, {\n    children: _jsxs(InnerContainer, {\n      children: [_jsx(PageLogo, {\n        resizeMode: \"cover\",\n        source: require(\"../assets/image/a.png\")\n      }), _jsxs(FormLog, {\n        style: styles.TouchableImage,\n        children: [_jsx(PageTitle, {\n          children: \"Login\"\n        }), _jsx(Formik, {\n          initialValues: {\n            user_name: '',\n            password: ''\n          },\n          onSubmit: function onSubmit(values) {\n            console.log(values);\n          },\n          children: function children(_ref2) {\n            var handleChange = _ref2.handleChange,\n                handleBlur = _ref2.handleBlur,\n                HandleSubmit = _ref2.HandleSubmit,\n                values = _ref2.values,\n                hidePassword = _ref2.hidePassword,\n                setHidePassword = _ref2.setHidePassword;\n            return _jsxs(StyledFormArea, {\n              children: [_jsx(MyTextInput, {\n                autofocus: true,\n                label: \"User name\",\n                icon: \"mail\",\n                placeholder: \"NameAbc\",\n                placeholderTextColor: darkLight,\n                onChangeText: handleChange('user_name'),\n                onBlur: handleBlur('user_name'),\n                value: values.user_name\n              }), _jsx(MyTextInput, {\n                label: \"Password\",\n                icon: \"lock\",\n                placeholder: \"* * * * * *\",\n                placeholderTextColor: darkLight,\n                onChangeText: handleChange('password'),\n                onBlur: handleBlur('password'),\n                value: values.password,\n                secureTextEntry: true\n              }), _jsx(Line, {}), _jsx(StyledButton, {\n                onPress: function onPress() {\n                  login(values);\n                  HandleSubmit;\n                },\n                children: _jsx(ButtonText, {\n                  children: \"Login\"\n                })\n              })]\n            });\n          }\n        })]\n      })]\n    })\n  });\n};\n\nvar MyTextInput = function MyTextInput(_ref3) {\n  var label = _ref3.label,\n      icon = _ref3.icon,\n      isPassword = _ref3.isPassword,\n      hidePassword = _ref3.hidePassword,\n      setHidePassword = _ref3.setHidePassword,\n      props = _objectWithoutProperties(_ref3, _excluded);\n\n  return _jsxs(View, {\n    children: [_jsx(LeftIcon, {\n      children: _jsx(Octicons, {\n        name: icon,\n        size: 30,\n        color: brand\n      })\n    }), _jsx(StyledInputLabel, {\n      children: label\n    }), _jsx(StyledTextInput, _objectSpread({}, props))]\n  });\n};\n\nvar styles = StyleSheet.create({\n  logo: {\n    paddingTop: 20,\n    fontSize: 30,\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    color: primary\n  },\n  container: {\n    flex: 1,\n    backgroundColor: brand\n  },\n  TouchableImage: {\n    padding: 20,\n    shadowColor: \"#1F2937\",\n    shadowOpacity: .25,\n    shadowRadius: 2,\n    shadowOffset: {\n      height: 1,\n      width: 3\n    }\n  }\n});\nexport default Login;","map":{"version":3,"names":["React","StatusBar","Octicons","IonicIcon","StyledContainer","InnerContainer","PageLogo","PageTitle","StyledFormArea","LeftIcon","StyledTextInput","StyledInputLabel","StyledButton","ButtonText","Line","Colors","FormLog","Formik","Button","brand","darkLight","primary","Login","navigation","login","values","user_name","password","Alert","alert","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","data","error","navigate","require","styles","TouchableImage","handleChange","handleBlur","HandleSubmit","hidePassword","setHidePassword","MyTextInput","label","icon","isPassword","props","StyleSheet","create","logo","paddingTop","fontSize","textAlign","justifyContent","color","container","flex","backgroundColor","padding","shadowColor","shadowOpacity","shadowRadius","shadowOffset","height","width"],"sources":["C:/Users/ASUS/Desktop/ChuyenDeDiDongV2/screens/Login.js"],"sourcesContent":["import React from \"react\";\r\nimport { StatusBar } from 'expo-status-bar';\r\n\r\n\r\n//Icon\r\nimport { Octicons, IonicIcon } from '@expo/vector-icons';\r\n\r\nimport {\r\n    StyledContainer,\r\n    InnerContainer,\r\n    PageLogo,\r\n    PageTitle,\r\n    StyledFormArea,\r\n    LeftIcon,\r\n    StyledTextInput,\r\n    StyledInputLabel,\r\n    StyledButton,\r\n    ButtonText,\r\n    Line,\r\n    Colors,\r\n    FormLog,\r\n} from \"../components/styles\"\r\nimport { Formik } from \"formik\";\r\nimport { StyleSheet, View , Alert} from \"react-native\";\r\nimport Button from \"../components/Button\";\r\n\r\n//Colors \r\nconst { brand, darkLight ,primary } = Colors;\r\n\r\nconst Login = ({ navigation }) => {\r\n    const login = (values) => {\r\n        if (values.user_name == \"\" || values.password == \"\") {\r\n            Alert.alert(\"All fields must be required!\");\r\n            return;\r\n        } else {\r\n            console.log(values.password);\r\n            fetch('http://192.168.117.119:3000/api/user/login', {\r\n                method: 'POST',\r\n                headers: { 'content-type': 'application/json' },\r\n                body: JSON.stringify(values),\r\n            }).then(res => res.json()).then(data => {\r\n                // console.log(data);\r\n                if (data.error) {\r\n                    Alert.alert(data.error);\r\n                    console.log(data.error);\r\n                } else {\r\n                    // Alert.alert(\"Login is success!\");\r\n                    return navigation.navigate('Home');\r\n                }\r\n            })\r\n        }\r\n    };\r\n    return (\r\n        <StyledContainer >\r\n            <InnerContainer>\r\n                <PageLogo resizeMode=\"cover\" source={require('../assets/image/a.png')} ></PageLogo>\r\n                <FormLog style={styles.TouchableImage} >\r\n                    <PageTitle>Login</PageTitle>\r\n                    <Formik\r\n                        initialValues={{ user_name: '', password: '' }}\r\n                        onSubmit={(values) => { console.log(values); }} >\r\n                        {({ handleChange, handleBlur, HandleSubmit, values, hidePassword, setHidePassword }) => (\r\n                            <StyledFormArea>\r\n                                <MyTextInput\r\n                                    autofocus\r\n                                    label=\"User name\"\r\n                                    icon=\"mail\"\r\n                                    placeholder=\"NameAbc\"\r\n                                    placeholderTextColor={darkLight}\r\n                                    onChangeText={handleChange('user_name')}\r\n                                    onBlur={handleBlur('user_name')}\r\n                                    value={values.user_name}\r\n                                >\r\n                                </MyTextInput>\r\n                                <MyTextInput\r\n                                    label=\"Password\"\r\n                                    icon=\"lock\"\r\n                                    placeholder=\"* * * * * *\"\r\n                                    placeholderTextColor={darkLight}\r\n                                    onChangeText={handleChange('password')}\r\n                                    onBlur={handleBlur('password')}\r\n                                    value={values.password}\r\n                                    secureTextEntry={true}\r\n                                >\r\n                                </MyTextInput>\r\n                                <Line />\r\n                                <StyledButton onPress={() => { \r\n                                    login(values);\r\n                                    // navigation.navigate('Home'), \r\n                                    HandleSubmit \r\n                                    }} >\r\n                                    <ButtonText>\r\n                                        Login\r\n                                    </ButtonText>\r\n                                </StyledButton>\r\n                                {/* <StyledButton onPress={() => { navigation.navigate('Test')}} >\r\n                                    <ButtonText>\r\n                                        Test\r\n                                    </ButtonText>\r\n                                </StyledButton> */}\r\n                            </StyledFormArea>\r\n                        )}\r\n                    </Formik>\r\n                </FormLog>\r\n            </InnerContainer>\r\n        </StyledContainer>\r\n    );\r\n}\r\nconst MyTextInput = ({ label, icon, isPassword, hidePassword, setHidePassword, ...props }) => {\r\n    return (\r\n        <View>\r\n            <LeftIcon>\r\n                <Octicons name={icon} size={30} color={brand} />\r\n            </LeftIcon>\r\n            <StyledInputLabel>\r\n                {label}\r\n            </StyledInputLabel>\r\n            <StyledTextInput {...props} />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    logo: {\r\n        paddingTop: 20,\r\n        fontSize: 30,\r\n        textAlign: \"center\",\r\n        justifyContent: \"center\",\r\n        color: primary,\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: brand,\r\n    },\r\n    TouchableImage: {\r\n        padding: 20,\r\n        shadowColor: \"#1F2937\",\r\n        shadowOpacity: .25,\r\n        shadowRadius: 2,\r\n        shadowOffset: {\r\n            height: 1,\r\n            width: 3\r\n        }\r\n    },\r\n\r\n})\r\n\r\nexport default Login;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect, useMemo } from 'react';\nimport { deepSearchInArr } from \"../helpers/deepSearchInArr\";\nimport { findIndexInArr } from \"../helpers/findIndexInArr\";\nimport { isExist } from \"../helpers/isExist\";\nexport var useSelectDropdown = function useSelectDropdown(data, defaultValueByIndex, defaultValue, disabledInternalSearch) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedItem = _useState2[0],\n      setSelectedItem = _useState2[1];\n\n  var _useState3 = useState(-1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedIndex = _useState4[0],\n      setSelectedIndex = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchTxt = _useState6[0],\n      setSearchTxt = _useState6[1];\n\n  useEffect(function () {\n    if (!data || data.length == 0) {\n      reset();\n    }\n  }, [data]);\n  useEffect(function () {\n    if (isExist(defaultValueByIndex)) {\n      if (data && isExist(data[defaultValueByIndex])) {\n        selectItem(defaultValueByIndex);\n      }\n    }\n  }, [defaultValueByIndex]);\n  useEffect(function () {\n    if (isExist(defaultValue)) {\n      if (data && findIndexInArr(defaultValue, data) >= 0) {\n        selectItem(findIndexInArr(defaultValue, data));\n      }\n    }\n  }, [defaultValue]);\n  var dataArr = useMemo(function () {\n    if (disabledInternalSearch) {\n      return data;\n    }\n\n    return searchTxt ? deepSearchInArr(searchTxt, data) : data;\n  }, [data, searchTxt]);\n\n  var selectItem = function selectItem(index) {\n    setSelectedItem(data[index]);\n    setSelectedIndex(index);\n  };\n\n  var reset = function reset() {\n    setSelectedItem(null);\n    setSelectedIndex(-1);\n  };\n\n  return {\n    dataArr: dataArr,\n    selectedItem: selectedItem,\n    selectedIndex: selectedIndex,\n    selectItem: selectItem,\n    reset: reset,\n    searchTxt: searchTxt,\n    setSearchTxt: setSearchTxt\n  };\n};","map":{"version":3,"names":["useState","useEffect","useMemo","deepSearchInArr","findIndexInArr","isExist","useSelectDropdown","data","defaultValueByIndex","defaultValue","disabledInternalSearch","selectedItem","setSelectedItem","selectedIndex","setSelectedIndex","searchTxt","setSearchTxt","length","reset","selectItem","dataArr","index"],"sources":["C:/Users/ASUS/Desktop/ChuyenDeDiDongV2/node_modules/react-native-select-dropdown/src/hooks/useSelectDropdown.js"],"sourcesContent":["import {useState, useEffect, useMemo} from 'react';\r\nimport {deepSearchInArr} from '../helpers/deepSearchInArr';\r\nimport {findIndexInArr} from '../helpers/findIndexInArr';\r\nimport {isExist} from '../helpers/isExist';\r\n\r\nexport const useSelectDropdown = (data, defaultValueByIndex, defaultValue, disabledInternalSearch) => {\r\n  const [selectedItem, setSelectedItem] = useState(null); // selected item from dropdown\r\n  const [selectedIndex, setSelectedIndex] = useState(-1); // index of selected item from dropdown\r\n  const [searchTxt, setSearchTxt] = useState('');\r\n\r\n  // data array changes\r\n  useEffect(() => {\r\n    if (!data || data.length == 0) {\r\n      reset();\r\n    }\r\n  }, [data]);\r\n\r\n  // default value by index added or changed\r\n  useEffect(() => {\r\n    // defaultValueByIndex may be equals zero\r\n    if (isExist(defaultValueByIndex)) {\r\n      if (data && isExist(data[defaultValueByIndex])) {\r\n        selectItem(defaultValueByIndex);\r\n      }\r\n    }\r\n  }, [defaultValueByIndex]);\r\n  // default value added or changed\r\n  useEffect(() => {\r\n    // defaultValue may be equals zero\r\n    if (isExist(defaultValue)) {\r\n      if (data && findIndexInArr(defaultValue, data) >= 0) {\r\n        selectItem(findIndexInArr(defaultValue, data));\r\n      }\r\n    }\r\n  }, [defaultValue]);\r\n\r\n  const dataArr = useMemo(() => {\r\n    if (disabledInternalSearch) {\r\n      return data;\r\n    }\r\n    return searchTxt ? deepSearchInArr(searchTxt, data) : data;\r\n  }, [data, searchTxt]);\r\n\r\n  const selectItem = index => {\r\n    setSelectedItem(data[index]);\r\n    setSelectedIndex(index);\r\n  };\r\n\r\n  const reset = () => {\r\n    setSelectedItem(null);\r\n    setSelectedIndex(-1);\r\n  };\r\n\r\n  return {\r\n    dataArr,\r\n    selectedItem,\r\n    selectedIndex,\r\n    selectItem,\r\n    reset,\r\n    searchTxt,\r\n    setSearchTxt,\r\n  };\r\n};\r\n"],"mappings":";AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,OAA7B,QAA2C,OAA3C;AACA,SAAQC,eAAR;AACA,SAAQC,cAAR;AACA,SAAQC,OAAR;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,IAAD,EAAOC,mBAAP,EAA4BC,YAA5B,EAA0CC,sBAA1C,EAAqE;EACpG,gBAAwCV,QAAQ,CAAC,IAAD,CAAhD;EAAA;EAAA,IAAOW,YAAP;EAAA,IAAqBC,eAArB;;EACA,iBAA0CZ,QAAQ,CAAC,CAAC,CAAF,CAAlD;EAAA;EAAA,IAAOa,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,iBAAkCd,QAAQ,CAAC,EAAD,CAA1C;EAAA;EAAA,IAAOe,SAAP;EAAA,IAAkBC,YAAlB;;EAGAf,SAAS,CAAC,YAAM;IACd,IAAI,CAACM,IAAD,IAASA,IAAI,CAACU,MAAL,IAAe,CAA5B,EAA+B;MAC7BC,KAAK;IACN;EACF,CAJQ,EAIN,CAACX,IAAD,CAJM,CAAT;EAOAN,SAAS,CAAC,YAAM;IAEd,IAAII,OAAO,CAACG,mBAAD,CAAX,EAAkC;MAChC,IAAID,IAAI,IAAIF,OAAO,CAACE,IAAI,CAACC,mBAAD,CAAL,CAAnB,EAAgD;QAC9CW,UAAU,CAACX,mBAAD,CAAV;MACD;IACF;EACF,CAPQ,EAON,CAACA,mBAAD,CAPM,CAAT;EASAP,SAAS,CAAC,YAAM;IAEd,IAAII,OAAO,CAACI,YAAD,CAAX,EAA2B;MACzB,IAAIF,IAAI,IAAIH,cAAc,CAACK,YAAD,EAAeF,IAAf,CAAd,IAAsC,CAAlD,EAAqD;QACnDY,UAAU,CAACf,cAAc,CAACK,YAAD,EAAeF,IAAf,CAAf,CAAV;MACD;IACF;EACF,CAPQ,EAON,CAACE,YAAD,CAPM,CAAT;EASA,IAAMW,OAAO,GAAGlB,OAAO,CAAC,YAAM;IAC5B,IAAIQ,sBAAJ,EAA4B;MAC1B,OAAOH,IAAP;IACD;;IACD,OAAOQ,SAAS,GAAGZ,eAAe,CAACY,SAAD,EAAYR,IAAZ,CAAlB,GAAsCA,IAAtD;EACD,CALsB,EAKpB,CAACA,IAAD,EAAOQ,SAAP,CALoB,CAAvB;;EAOA,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAAAE,KAAK,EAAI;IAC1BT,eAAe,CAACL,IAAI,CAACc,KAAD,CAAL,CAAf;IACAP,gBAAgB,CAACO,KAAD,CAAhB;EACD,CAHD;;EAKA,IAAMH,KAAK,GAAG,SAARA,KAAQ,GAAM;IAClBN,eAAe,CAAC,IAAD,CAAf;IACAE,gBAAgB,CAAC,CAAC,CAAF,CAAhB;EACD,CAHD;;EAKA,OAAO;IACLM,OAAO,EAAPA,OADK;IAELT,YAAY,EAAZA,YAFK;IAGLE,aAAa,EAAbA,aAHK;IAILM,UAAU,EAAVA,UAJK;IAKLD,KAAK,EAALA,KALK;IAMLH,SAAS,EAATA,SANK;IAOLC,YAAY,EAAZA;EAPK,CAAP;AASD,CAzDM"},"metadata":{},"sourceType":"module"}
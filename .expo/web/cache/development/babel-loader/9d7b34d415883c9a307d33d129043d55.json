{"ast":null,"code":"var contains = function contains(query, item) {\n  if (item) {\n    if (typeof item != 'object') {\n      var str = item.toString().toLowerCase();\n\n      if (str.includes(query.toString().toLowerCase())) {\n        return true;\n      }\n    } else {\n      for (var key in item) {\n        if (item[key]) {\n          if (typeof item[key] == 'object') {\n            return contains(query, item[key]);\n          } else {\n            var _str = item[key].toString().toLowerCase();\n\n            if (_str.includes(query.toString().toLowerCase())) {\n              return true;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return false;\n};\n\nexport var deepSearchInArr = function deepSearchInArr(query, arr) {\n  var array = [];\n\n  for (var i = 0; i <= arr.length - 1; i++) {\n    if (contains(query, arr[i])) {\n      array.push(arr[i]);\n    } else {\n      array.push(null);\n    }\n\n    if (i == arr.length - 1) {\n      return array;\n    }\n  }\n};","map":{"version":3,"names":["contains","query","item","str","toString","toLowerCase","includes","key","deepSearchInArr","arr","array","i","length","push"],"sources":["C:/Users/ASUS/Desktop/ChuyenDeDiDongV2/node_modules/react-native-select-dropdown/src/helpers/deepSearchInArr.js"],"sourcesContent":["const contains = (query, item) => {\n  if (item) {\n    // string, number or boolean\n    if (typeof item != 'object') {\n      const str = item.toString().toLowerCase();\n      if (str.includes(query.toString().toLowerCase())) {\n        return true;\n      }\n    } else {\n      // item is an object\n      for (let key in item) {\n        if (item[key]) {\n          if (typeof item[key] == 'object') {\n            return contains(query, item[key]);\n          } else {\n            const str = item[key].toString().toLowerCase();\n            if (str.includes(query.toString().toLowerCase())) {\n              return true;\n            }\n          }\n        }\n      }\n    }\n  }\n  return false;\n};\n\nexport const deepSearchInArr = (query, arr) => {\n  let array = [];\n  for (let i = 0; i <= arr.length - 1; i++) {\n    if (contains(query, arr[i])) {\n      array.push(arr[i]);\n    } else {\n      array.push(null);\n    }\n    if (i == arr.length - 1) {\n      return array;\n    }\n  }\n};\n"],"mappings":"AAAA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,IAAR,EAAiB;EAChC,IAAIA,IAAJ,EAAU;IAER,IAAI,OAAOA,IAAP,IAAe,QAAnB,EAA6B;MAC3B,IAAMC,GAAG,GAAGD,IAAI,CAACE,QAAL,GAAgBC,WAAhB,EAAZ;;MACA,IAAIF,GAAG,CAACG,QAAJ,CAAaL,KAAK,CAACG,QAAN,GAAiBC,WAAjB,EAAb,CAAJ,EAAkD;QAChD,OAAO,IAAP;MACD;IACF,CALD,MAKO;MAEL,KAAK,IAAIE,GAAT,IAAgBL,IAAhB,EAAsB;QACpB,IAAIA,IAAI,CAACK,GAAD,CAAR,EAAe;UACb,IAAI,OAAOL,IAAI,CAACK,GAAD,CAAX,IAAoB,QAAxB,EAAkC;YAChC,OAAOP,QAAQ,CAACC,KAAD,EAAQC,IAAI,CAACK,GAAD,CAAZ,CAAf;UACD,CAFD,MAEO;YACL,IAAMJ,IAAG,GAAGD,IAAI,CAACK,GAAD,CAAJ,CAAUH,QAAV,GAAqBC,WAArB,EAAZ;;YACA,IAAIF,IAAG,CAACG,QAAJ,CAAaL,KAAK,CAACG,QAAN,GAAiBC,WAAjB,EAAb,CAAJ,EAAkD;cAChD,OAAO,IAAP;YACD;UACF;QACF;MACF;IACF;EACF;;EACD,OAAO,KAAP;AACD,CAzBD;;AA2BA,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACP,KAAD,EAAQQ,GAAR,EAAgB;EAC7C,IAAIC,KAAK,GAAG,EAAZ;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,GAAG,CAACG,MAAJ,GAAa,CAAlC,EAAqCD,CAAC,EAAtC,EAA0C;IACxC,IAAIX,QAAQ,CAACC,KAAD,EAAQQ,GAAG,CAACE,CAAD,CAAX,CAAZ,EAA6B;MAC3BD,KAAK,CAACG,IAAN,CAAWJ,GAAG,CAACE,CAAD,CAAd;IACD,CAFD,MAEO;MACLD,KAAK,CAACG,IAAN,CAAW,IAAX;IACD;;IACD,IAAIF,CAAC,IAAIF,GAAG,CAACG,MAAJ,GAAa,CAAtB,EAAyB;MACvB,OAAOF,KAAP;IACD;EACF;AACF,CAZM"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\nimport invariant from 'fbjs/lib/invariant';\n\nvar ViewabilityHelper = function () {\n  function ViewabilityHelper(config) {\n    _classCallCheck(this, ViewabilityHelper);\n\n    if (config === void 0) {\n      config = {\n        viewAreaCoveragePercentThreshold: 0\n      };\n    }\n\n    this._hasInteracted = false;\n    this._timers = new Set();\n    this._viewableIndices = [];\n    this._viewableItems = new Map();\n    this._config = config;\n  }\n\n  _createClass(ViewabilityHelper, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._timers.forEach(clearTimeout);\n    }\n  }, {\n    key: \"computeViewableItems\",\n    value: function computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange) {\n      var _this$_config = this._config,\n          itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,\n          viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;\n      var viewAreaMode = viewAreaCoveragePercentThreshold != null;\n      var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;\n      invariant(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');\n      var viewableIndices = [];\n\n      if (itemCount === 0) {\n        return viewableIndices;\n      }\n\n      var firstVisible = -1;\n\n      var _ref = renderRange || {\n        first: 0,\n        last: itemCount - 1\n      },\n          first = _ref.first,\n          last = _ref.last;\n\n      if (last >= itemCount) {\n        console.warn('Invalid render range computing viewability ' + JSON.stringify({\n          renderRange: renderRange,\n          itemCount: itemCount\n        }));\n        return [];\n      }\n\n      for (var idx = first; idx <= last; idx++) {\n        var metrics = getFrameMetrics(idx);\n\n        if (!metrics) {\n          continue;\n        }\n\n        var top = metrics.offset - scrollOffset;\n        var bottom = top + metrics.length;\n\n        if (top < viewportHeight && bottom > 0) {\n          firstVisible = idx;\n\n          if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {\n            viewableIndices.push(idx);\n          }\n        } else if (firstVisible >= 0) {\n          break;\n        }\n      }\n\n      return viewableIndices;\n    }\n  }, {\n    key: \"onUpdate\",\n    value: function onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange) {\n      var _this = this;\n\n      if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0)) {\n        return;\n      }\n\n      var viewableIndices = [];\n\n      if (itemCount) {\n        viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);\n      }\n\n      if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {\n        return v === viewableIndices[ii];\n      })) {\n        return;\n      }\n\n      this._viewableIndices = viewableIndices;\n\n      if (this._config.minimumViewTime) {\n        var handle = setTimeout(function () {\n          _this._timers.delete(handle);\n\n          _this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n        }, this._config.minimumViewTime);\n\n        this._timers.add(handle);\n      } else {\n        this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n      }\n    }\n  }, {\n    key: \"resetViewableIndices\",\n    value: function resetViewableIndices() {\n      this._viewableIndices = [];\n    }\n  }, {\n    key: \"recordInteraction\",\n    value: function recordInteraction() {\n      this._hasInteracted = true;\n    }\n  }, {\n    key: \"_onUpdateSync\",\n    value: function _onUpdateSync(viewableIndicesToCheck, onViewableItemsChanged, createViewToken) {\n      var _this2 = this;\n\n      viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {\n        return _this2._viewableIndices.includes(ii);\n      });\n      var prevItems = this._viewableItems;\n      var nextItems = new Map(viewableIndicesToCheck.map(function (ii) {\n        var viewable = createViewToken(ii, true);\n        return [viewable.key, viewable];\n      }));\n      var changed = [];\n\n      for (var _iterator = _createForOfIteratorHelperLoose(nextItems), _step; !(_step = _iterator()).done;) {\n        var _step$value = _step.value,\n            key = _step$value[0],\n            viewable = _step$value[1];\n\n        if (!prevItems.has(key)) {\n          changed.push(viewable);\n        }\n      }\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(prevItems), _step2; !(_step2 = _iterator2()).done;) {\n        var _step2$value = _step2.value,\n            _key = _step2$value[0],\n            _viewable = _step2$value[1];\n\n        if (!nextItems.has(_key)) {\n          changed.push(_objectSpread(_objectSpread({}, _viewable), {}, {\n            isViewable: false\n          }));\n        }\n      }\n\n      if (changed.length > 0) {\n        this._viewableItems = nextItems;\n        onViewableItemsChanged({\n          viewableItems: Array.from(nextItems.values()),\n          changed: changed,\n          viewabilityConfig: this._config\n        });\n      }\n    }\n  }]);\n\n  return ViewabilityHelper;\n}();\n\nfunction _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {\n  if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n    return true;\n  } else {\n    var pixels = _getPixelsVisible(top, bottom, viewportHeight);\n\n    var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n    return percent >= viewablePercentThreshold;\n  }\n}\n\nfunction _getPixelsVisible(top, bottom, viewportHeight) {\n  var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n  return Math.max(0, visibleHeight);\n}\n\nfunction _isEntirelyVisible(top, bottom, viewportHeight) {\n  return top >= 0 && bottom <= viewportHeight && bottom > top;\n}\n\nexport default ViewabilityHelper;","map":{"version":3,"names":["_objectSpread","_createForOfIteratorHelperLoose","invariant","ViewabilityHelper","config","viewAreaCoveragePercentThreshold","_hasInteracted","_timers","Set","_viewableIndices","_viewableItems","Map","_config","forEach","clearTimeout","itemCount","scrollOffset","viewportHeight","getFrameMetrics","renderRange","_this$_config","itemVisiblePercentThreshold","viewAreaMode","viewablePercentThreshold","viewableIndices","firstVisible","_ref","first","last","console","warn","JSON","stringify","idx","metrics","top","offset","bottom","length","_isViewable","push","createViewToken","onViewableItemsChanged","waitForInteraction","computeViewableItems","every","v","ii","minimumViewTime","handle","setTimeout","delete","_onUpdateSync","add","viewableIndicesToCheck","filter","includes","prevItems","nextItems","map","viewable","key","changed","_iterator","_step","done","_step$value","value","has","_iterator2","_step2","_step2$value","_key","_viewable","isViewable","viewableItems","Array","from","values","viewabilityConfig","itemLength","_isEntirelyVisible","pixels","_getPixelsVisible","percent","visibleHeight","Math","min","max"],"sources":["C:/Users/ASUS/Desktop/ChuyenDeDiDongV2/node_modules/react-native-web/dist/vendor/react-native/ViewabilityHelper/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n * @format\r\n */\r\n'use strict';\r\n\r\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\r\nimport _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\r\nimport invariant from 'fbjs/lib/invariant';\r\n\r\n/**\r\n * A Utility class for calculating viewable items based on current metrics like scroll position and\r\n * layout.\r\n *\r\n * An item is said to be in a \"viewable\" state when any of the following\r\n * is true for longer than `minimumViewTime` milliseconds (after an interaction if `waitForInteraction`\r\n * is true):\r\n *\r\n * - Occupying >= `viewAreaCoveragePercentThreshold` of the view area XOR fraction of the item\r\n *   visible in the view area >= `itemVisiblePercentThreshold`.\r\n * - Entirely visible on screen\r\n */\r\nclass ViewabilityHelper {\r\n  constructor(config) {\r\n    if (config === void 0) {\r\n      config = {\r\n        viewAreaCoveragePercentThreshold: 0\r\n      };\r\n    }\r\n\r\n    this._hasInteracted = false;\r\n    this._timers = new Set();\r\n    this._viewableIndices = [];\r\n    this._viewableItems = new Map();\r\n    this._config = config;\r\n  }\r\n  /**\r\n   * Cleanup, e.g. on unmount. Clears any pending timers.\r\n   */\r\n\r\n\r\n  dispose() {\r\n    this._timers.forEach(clearTimeout);\r\n  }\r\n  /**\r\n   * Determines which items are viewable based on the current metrics and config.\r\n   */\r\n\r\n\r\n  computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange // Optional optimization to reduce the scan size\r\n  ) {\r\n    var _this$_config = this._config,\r\n        itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,\r\n        viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;\r\n    var viewAreaMode = viewAreaCoveragePercentThreshold != null;\r\n    var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;\r\n    invariant(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');\r\n    var viewableIndices = [];\r\n\r\n    if (itemCount === 0) {\r\n      return viewableIndices;\r\n    }\r\n\r\n    var firstVisible = -1;\r\n\r\n    var _ref = renderRange || {\r\n      first: 0,\r\n      last: itemCount - 1\r\n    },\r\n        first = _ref.first,\r\n        last = _ref.last;\r\n\r\n    if (last >= itemCount) {\r\n      console.warn('Invalid render range computing viewability ' + JSON.stringify({\r\n        renderRange,\r\n        itemCount\r\n      }));\r\n      return [];\r\n    }\r\n\r\n    for (var idx = first; idx <= last; idx++) {\r\n      var metrics = getFrameMetrics(idx);\r\n\r\n      if (!metrics) {\r\n        continue;\r\n      }\r\n\r\n      var top = metrics.offset - scrollOffset;\r\n      var bottom = top + metrics.length;\r\n\r\n      if (top < viewportHeight && bottom > 0) {\r\n        firstVisible = idx;\r\n\r\n        if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {\r\n          viewableIndices.push(idx);\r\n        }\r\n      } else if (firstVisible >= 0) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return viewableIndices;\r\n  }\r\n  /**\r\n   * Figures out which items are viewable and how that has changed from before and calls\r\n   * `onViewableItemsChanged` as appropriate.\r\n   */\r\n\r\n\r\n  onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange // Optional optimization to reduce the scan size\r\n  ) {\r\n    if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0)) {\r\n      return;\r\n    }\r\n\r\n    var viewableIndices = [];\r\n\r\n    if (itemCount) {\r\n      viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);\r\n    }\r\n\r\n    if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every((v, ii) => v === viewableIndices[ii])) {\r\n      // We might get a lot of scroll events where visibility doesn't change and we don't want to do\r\n      // extra work in those cases.\r\n      return;\r\n    }\r\n\r\n    this._viewableIndices = viewableIndices;\r\n\r\n    if (this._config.minimumViewTime) {\r\n      var handle = setTimeout(() => {\r\n        this._timers.delete(handle);\r\n\r\n        this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\r\n      }, this._config.minimumViewTime);\r\n\r\n      this._timers.add(handle);\r\n    } else {\r\n      this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\r\n    }\r\n  }\r\n  /**\r\n   * clean-up cached _viewableIndices to evaluate changed items on next update\r\n   */\r\n\r\n\r\n  resetViewableIndices() {\r\n    this._viewableIndices = [];\r\n  }\r\n  /**\r\n   * Records that an interaction has happened even if there has been no scroll.\r\n   */\r\n\r\n\r\n  recordInteraction() {\r\n    this._hasInteracted = true;\r\n  }\r\n\r\n  _onUpdateSync( // $FlowFixMe\r\n  viewableIndicesToCheck, // $FlowFixMe\r\n  onViewableItemsChanged, // $FlowFixMe\r\n  createViewToken) {\r\n    // Filter out indices that have gone out of view since this call was scheduled.\r\n    viewableIndicesToCheck = viewableIndicesToCheck.filter(ii => this._viewableIndices.includes(ii));\r\n    var prevItems = this._viewableItems;\r\n    var nextItems = new Map(viewableIndicesToCheck.map(ii => {\r\n      var viewable = createViewToken(ii, true);\r\n      return [viewable.key, viewable];\r\n    }));\r\n    var changed = [];\r\n\r\n    for (var _iterator = _createForOfIteratorHelperLoose(nextItems), _step; !(_step = _iterator()).done;) {\r\n      var _step$value = _step.value,\r\n          key = _step$value[0],\r\n          viewable = _step$value[1];\r\n\r\n      if (!prevItems.has(key)) {\r\n        changed.push(viewable);\r\n      }\r\n    }\r\n\r\n    for (var _iterator2 = _createForOfIteratorHelperLoose(prevItems), _step2; !(_step2 = _iterator2()).done;) {\r\n      var _step2$value = _step2.value,\r\n          _key = _step2$value[0],\r\n          _viewable = _step2$value[1];\r\n\r\n      if (!nextItems.has(_key)) {\r\n        changed.push(_objectSpread(_objectSpread({}, _viewable), {}, {\r\n          isViewable: false\r\n        }));\r\n      }\r\n    }\r\n\r\n    if (changed.length > 0) {\r\n      this._viewableItems = nextItems;\r\n      onViewableItemsChanged({\r\n        viewableItems: Array.from(nextItems.values()),\r\n        changed,\r\n        viewabilityConfig: this._config\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\r\nfunction _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {\r\n  if (_isEntirelyVisible(top, bottom, viewportHeight)) {\r\n    return true;\r\n  } else {\r\n    var pixels = _getPixelsVisible(top, bottom, viewportHeight);\r\n\r\n    var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\r\n    return percent >= viewablePercentThreshold;\r\n  }\r\n}\r\n\r\nfunction _getPixelsVisible(top, bottom, viewportHeight) {\r\n  var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\r\n  return Math.max(0, visibleHeight);\r\n}\r\n\r\nfunction _isEntirelyVisible(top, bottom, viewportHeight) {\r\n  return top >= 0 && bottom <= viewportHeight && bottom > top;\r\n}\r\n\r\nexport default ViewabilityHelper;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
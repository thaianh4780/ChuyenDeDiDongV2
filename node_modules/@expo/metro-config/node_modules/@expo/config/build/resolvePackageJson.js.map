<<<<<<< HEAD
{"version":3,"file":"resolvePackageJson.js","names":["fileExists","file","statSync","isFile","getRootPackageJsonPath","projectRoot","packageJsonPath","join","ConfigError"],"sources":["../src/resolvePackageJson.ts"],"sourcesContent":["import { statSync } from 'fs';\nimport { join } from 'path';\n\nimport { ConfigError } from './Errors';\n\nfunction fileExists(file: string): boolean {\n  try {\n    return statSync(file).isFile();\n  } catch {\n    return false;\n  }\n}\n\nexport function getRootPackageJsonPath(projectRoot: string): string {\n  const packageJsonPath = join(projectRoot, 'package.json');\n  if (!fileExists(packageJsonPath)) {\n    throw new ConfigError(\n      `The expected package.json path: ${packageJsonPath} does not exist`,\n      'MODULE_NOT_FOUND'\n    );\n  }\n  return packageJsonPath;\n}\n"],"mappings":";;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA,SAASA,UAAT,CAAoBC,IAApB,EAA2C;EACzC,IAAI;IACF,OAAO,IAAAC,cAAA,EAASD,IAAT,EAAeE,MAAf,EAAP;EACD,CAFD,CAEE,MAAM;IACN,OAAO,KAAP;EACD;AACF;;AAEM,SAASC,sBAAT,CAAgCC,WAAhC,EAA6D;EAClE,MAAMC,eAAe,GAAG,IAAAC,YAAA,EAAKF,WAAL,EAAkB,cAAlB,CAAxB;;EACA,IAAI,CAACL,UAAU,CAACM,eAAD,CAAf,EAAkC;IAChC,MAAM,KAAIE,qBAAJ,EACH,mCAAkCF,eAAgB,iBAD/C,EAEJ,kBAFI,CAAN;EAID;;EACD,OAAOA,eAAP;AACD"}
=======
{"version":3,"sources":["../src/resolvePackageJson.ts"],"names":["fileExists","file","isFile","getRootPackageJsonPath","projectRoot","packageJsonPath","ConfigError"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA,SAASA,UAAT,CAAoBC,IAApB,EAA2C;AACzC,MAAI;AACF,WAAO,oBAASA,IAAT,EAAeC,MAAf,EAAP;AACD,GAFD,CAEE,MAAM;AACN,WAAO,KAAP;AACD;AACF;;AAEM,SAASC,sBAAT,CAAgCC,WAAhC,EAA6D;AAClE,QAAMC,eAAe,GAAG,kBAAKD,WAAL,EAAkB,cAAlB,CAAxB;;AACA,MAAI,CAACJ,UAAU,CAACK,eAAD,CAAf,EAAkC;AAChC,UAAM,KAAIC,qBAAJ,EACH,mCAAkCD,eAAgB,iBAD/C,EAEJ,kBAFI,CAAN;AAID;;AACD,SAAOA,eAAP;AACD","sourcesContent":["import { statSync } from 'fs';\nimport { join } from 'path';\n\nimport { ConfigError } from './Errors';\n\nfunction fileExists(file: string): boolean {\n  try {\n    return statSync(file).isFile();\n  } catch {\n    return false;\n  }\n}\n\nexport function getRootPackageJsonPath(projectRoot: string): string {\n  const packageJsonPath = join(projectRoot, 'package.json');\n  if (!fileExists(packageJsonPath)) {\n    throw new ConfigError(\n      `The expected package.json path: ${packageJsonPath} does not exist`,\n      'MODULE_NOT_FOUND'\n    );\n  }\n  return packageJsonPath;\n}\n"],"file":"resolvePackageJson.js"}
>>>>>>> origin/main
